docker build -t friendlyhello .
docker run -p 4000:80 friendlyhello
 docker images
 docker tag f7bdfaf05229 hmackiernan/tutorial:part2
docker push hmackiernan/tutorial:part2
END_PART_TWO
docker swarm init
docker stack deploy -c docker-compose.yml getstartedlab
docker service ls
docker stack rm getstartedlab
docker node ls # the swarm is still up
docker-machine create --driver virtualbox myvm1
docker-machine create --driver virtualbox myvm2
# create two machines
docker-machine ls # list the machines and their IP
docker-machine ssh myvm1 "docker swarm init --advertise-addr 192.168.99.100"  # inside myvm1, init the swarm
docker-machine ssh myvm2 "docker swarm join --token SWMTKN-1-1zqzjnx0wftg0gk9bovdh0so79a2nyqoiygt2nw1xrura38xas-00v0uiepjuw5hlf0poeqzjw8m 192.168.99.100:2377" # inside myvm2, join the swarm w/ the prefab command emitted by myvm1 
docker node ls # show the swarm

# get a shell pointed at myvm1
docker machine env myvm1
eval $(docker-machine env myvm1)
# verify it's on myvm1 by the asterisk
docker-machine ls

# deploy app into the swarm manager, because we set the env bove
docker stack deploy -c docker-compose.yml getstartedlab
docker stack rm getstartedlab # remove the stack, leave the swarm

eval $(docker-machine env -u)  #unset the env from myvm1

# Start part 5
#Edited docker-compose.yml - added visualize
# deploy
docker stack deploy -c docker-compose.yml getstartedlab
# never works at this stage

#Edited docker-compose.yml - added redis

# create a directory on mvm1 to store data
docker-machine ssh myvm1 "mkdir ./data"


# redeploy
docker stack deploy -c docker-compose.yml getstartedlab
# this time with redis; for some reason now the visualizer works
